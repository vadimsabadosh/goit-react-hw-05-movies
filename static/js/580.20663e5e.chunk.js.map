{"version":3,"file":"static/js/580.20663e5e.chunk.js","mappings":"4TACMA,EAAU,+BACVC,EAAS,2DAEFC,EAAiB,mCAAG,sGACRC,IAAAA,IAAUH,EAAU,sBAAwBC,GADpC,uBACvBG,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAIjBC,EAAmB,mCAAG,WAAMC,GAAN,yFACVH,IAAAA,IAAA,UAClBH,EADkB,wBACKC,EADL,kBACqBK,EADrB,gCADU,uBACzBF,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,sDAOnBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,IAAAA,IAAA,UAAaH,EAAb,kBAA8BQ,GAA9B,OAAmCP,IAD3B,uBACvBG,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBK,EAAiB,mCAAG,WAAMD,GAAN,yFACRL,IAAAA,IAAA,UAAaH,EAAb,kBAA8BQ,EAA9B,mBAA2CP,IADnC,uBACvBG,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,IAAAA,IAAA,UAClBH,EADkB,kBACDQ,EADC,mBACYP,EADZ,YADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,+GCxB9B,EAAqB,oBAArB,EAA8C,oB,SCC9C,MCGe,WACb,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAkBC,GAASM,MAAK,SAAAb,GAAI,OAAIW,EAAWX,EAAKc,QAApB,GACrC,GAAE,CAACP,KAEF,gBAAIQ,UAAWC,EAAf,WACIN,EAAQO,SAAU,8DADtB,OAEGP,QAFH,IAEGA,OAFH,EAEGA,EAASQ,KAAI,YAA0C,IAAvCd,EAAsC,EAAtCA,GAAIe,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC9BC,EAAO,IAAIC,KAAKF,GACtB,OACE,gBAAaN,UAAWC,EAAxB,WACE,wBAAKG,KACL,uBAAIC,KACJ,0BAAOE,EAAKE,yBAHLpB,EAMZ,MAGN,C","sources":["api/index.js","webpack://goit-react-hw-05-movies/./src/components/pages/Reviews/Reviews.module.css?306d","components/pages/Reviews/index.js","components/pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst apikey = '?api_key=1cc97827f72be9cbe2ffb6e7bf434cb9&language=en-US';\n\nexport const fetchTrendingList = async () => {\n  const { data } = await axios.get(baseUrl + '/trending/movie/day' + apikey);\n  return data;\n};\nexport const fetchMoviesBySearch = async search => {\n  const { data } = await axios.get(\n    `${baseUrl}/search/movie${apikey}&query=${search}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`${baseUrl}/movie/${id}${apikey}`);\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`${baseUrl}/movie/${id}/credits${apikey}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${baseUrl}/movie/${id}/reviews${apikey}&page=1`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"Reviews_ul__Qlq5D\",\"li\":\"Reviews_li__kfHMv\"};","import Reviews from './Reviews';\n\nexport default Reviews;\n","import { fetchMovieReviews } from 'api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './Reviews.module.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n  return (\n    <ul className={styles.ul}>\n      {!reviews.length && <h3>There is no review for this movie</h3>}\n      {reviews?.map(({ id, author, content, created_at }) => {\n        const date = new Date(created_at);\n        return (\n          <li key={id} className={styles.li}>\n            <h6>{author}</h6>\n            <p>{content}</p>\n            <span>{date.toLocaleDateString()}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"],"names":["baseUrl","apikey","fetchTrendingList","axios","data","fetchMoviesBySearch","search","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","movieId","useParams","useState","reviews","setReviews","useEffect","then","results","className","styles","length","map","author","content","created_at","date","Date","toLocaleDateString"],"sourceRoot":""}